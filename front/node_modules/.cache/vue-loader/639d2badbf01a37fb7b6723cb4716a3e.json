{"remainingRequest":"C:\\develop\\xxx\\TrainTicketBookingSystem-main\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\develop\\xxx\\TrainTicketBookingSystem-main\\front\\src\\views\\modules\\checiOrder\\add-or-update.vue?vue&type=template&id=44490f82","dependencies":[{"path":"C:\\develop\\xxx\\TrainTicketBookingSystem-main\\front\\src\\views\\modules\\checiOrder\\add-or-update.vue","mtime":1746346432773},{"path":"C:\\develop\\xxx\\TrainTicketBookingSystem-main\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\xxx\\TrainTicketBookingSystem-main\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\xxx\\TrainTicketBookingSystem-main\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\develop\\xxx\\TrainTicketBookingSystem-main\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\develop\\xxx\\TrainTicketBookingSystem-main\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\xxx\\TrainTicketBookingSystem-main\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}